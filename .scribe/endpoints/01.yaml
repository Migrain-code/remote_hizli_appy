name: Personal
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/personel/today/appointment
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Personel Anasayfası
        appointment_date gönderilecek
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/business/personal
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/personal'
      description: |-
        Personel listesini döndürecek size
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/business/personal/add/get
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/business/personal/add/get'
      description: |-
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/business/personal/get
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/personal/get'
      description: |-
        id si gönderilen personelin getirecek
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        <li>personalId | required | güncellenecek personel id si</li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/business/personal/add
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/personal/add'
      description: |-
        Personel Ekleme pointi
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        <li> name |required | string | </li>
        <li> image |required | string | </li>
        <li> email |required | string | </li>
        <li> phone |required | string | </li>
        <li> password |required | string | </li>
        <li> approveType |required | numeric | örneğin 1 veya 0</li>
        <li> restDay |required | numeric | haftanın günlerinden herhangi bir günün id si</li>
        <li> startTime |required | string | örneğin 10:43 </li>
        <li> endTime |required | string | örneğin 10:43</li>
        <li> foodStart |required | string | örneğin 10:43</li>
        <li> foodEnd |required | string | örneğin 10:43</li>
        <li> gender |required | numeric | 1 => kadın,2 => erkek,3 => Unisex herhangi biri</li>
        <li> rate |required | numeric | 10 personel yüzdesi 10 = %10</li>
        <li> appointmentRange |required | numeric | randevu aralığı örneğin "15" dk bazında</li>
        <li> description |required | string</li>
        <li> services | required | array | eğer tümü seçeneği seçilirse "all" olarak gönderebilirsiniz dizi içerisinde</li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      approveType:
        name: approveType
        description: ''
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      restDay:
        name: restDay
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      startTime:
        name: startTime
        description: ''
        required: true
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      endTime:
        name: endTime
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: nulla
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rate:
        name: rate
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      appointmentRange:
        name: appointmentRange
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      services:
        name: services
        description: ''
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: dolores
      email: magni
      phone: non
      password: dolorem
      approveType: facere
      restDay: et
      startTime: occaecati
      endTime: aut
      gender: nulla
      rate: deserunt
      appointmentRange: et
      description: aut
      services: hic
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/business/personal/update
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/personal/update'
      description: |-
        Personel Güncelleme pointi
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        <li> personal_id | required | numeric</li>
        <li> name |required | string | personal adı</li>
        <li> image |required | string | personel görseli</li>
        <li> email |required | string | mail adresi</li>
        <li> phone |required | string | telefon numarası</li>
        <li> password |required | string | şifre</li>
        <li> approveType |required | numeric | örneğin 1 veya 0</li>
        <li> restDay |required | numeric | haftanın günlerinden herhangi bir günün id si</li>
        <li> startTime |required | string | örneğin 10:43 </li>
        <li> endTime |required | string | örneğin 10:43</li>
        <li> foodStart |required | string | örneğin 10:43</li>
        <li> foodEnd |required | string | örneğin 10:43</li>
        <li> gender |required | numeric | 1 => kadın,2 => erkek,3 => Unisex herhangi biri</li>
        <li> rate |required | numeric | 10 personel yüzdesi 10 = %10</li>
        <li> appointmentRange |required | numeric | randevu aralığı örneğin "15" dk bazında</li>
        <li> description |required | string</li>
        <li> services | required | array | eğer tümü seçeneği seçilirse "all" olarak gönderebilirsiniz dizi içerisinde</li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      personal_id:
        name: personal_id
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      approveType:
        name: approveType
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      restDay:
        name: restDay
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      startTime:
        name: startTime
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      endTime:
        name: endTime
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rate:
        name: rate
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      appointmentRange:
        name: appointmentRange
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      services:
        name: services
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      personal_id: veritatis
      name: qui
      email: nemo
      phone: sed
      approveType: vel
      restDay: doloremque
      startTime: voluptatem
      endTime: rerum
      gender: suscipit
      rate: et
      appointmentRange: modi
      description: sit
      services: ea
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/business/personal/delete
    metadata:
      groupName: Personal
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/personal/get'
      description: |-
        id si gönderilen personeli silecek
        <br> Gerekli alanlar
        <ul>
        <li> token </li>
        <li>personalId | required | silinecek personel id si</li>
        </ul>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: '{token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
